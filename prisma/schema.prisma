// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String  @db.VarChar(255)
  email    String  @unique @db.VarChar(255)
  password String  @db.VarChar(255)
  age      Int?    @db.Integer
  document String? @unique @db.VarChar(255)

  createdAt          DateTime             @default(now()) @map("created_at")
  updatedAt          DateTime?            @default(now()) @updatedAt @map("updated_at")
  deletedAt          DateTime?            @map("deleted_at")
  UserAuthentication UserAuthentication[]

  @@map("user")
}

model UserAuthentication {
  id         Int       @id @default(autoincrement())
  userId     Int       @map("user_id") @db.Integer
  isLogged   Boolean   @default(false)
  expireDate DateTime? @map("expire_date")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @default(now()) @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  user User @relation(fields: [userId], references: [id])

  @@map("user_authentication")
}
